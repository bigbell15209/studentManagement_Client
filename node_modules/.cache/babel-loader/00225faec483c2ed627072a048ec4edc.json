{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bigbe\\\\Desktop\\\\Emerging Technologies - COMP 308 - 002\\\\week05\\\\express-react-example\\\\express-react-example\\\\react-client\\\\src\\\\components\\\\CreateCourse.js\";\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport React, { useState } from 'react'; //\n\nfunction CreateCourse(props) {\n  //\n  const studentNumber = props.screen;\n  console.log('props.screen', props.screen);\n  const [course, setCourse] = useState({\n    _id: '',\n    courseCode: '',\n    courseName: '',\n    section: '',\n    semester: '',\n    studentNumber: ''\n  });\n  const [showLoading, setShowLoading] = useState(false); //\n\n  const apiUrl = \"http://localhost:3000/api/courses\"; //\n\n  const seveCourse = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      courseCode: course.courseCode,\n      courseName: course.courseName,\n      section: course.section,\n      semester: course.semester,\n      studentNumber: studentNumber\n    }; //\n\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      console.log('results from save course:', result.data);\n      props.history.push('/showcourse/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  }; //\n\n\n  const onChange = e => {\n    e.persist();\n    setCourse({ ...course,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \" Create an course \", studentNumber, \" \"), showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: saveCourse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \" Course Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"courseCode\",\n    id: \"courseCode\",\n    placeholder: \"Enter courseCode\",\n    value: course.courseCode,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \" Course Name \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"courseName\",\n    id: \"courseName\",\n    placeholder: \"Enter courseName\",\n    value: course.courseName,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \" Section \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"section\",\n    id: \"section\",\n    placeholder: \"Enter section\",\n    value: course.section,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \" semester \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"semester\",\n    id: \"semester\",\n    placeholder: \"Enter semester\",\n    value: course.semester,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Save Course\"))));\n}\n\nexport default withRouter(CreateCourse);","map":{"version":3,"sources":["C:/Users/bigbe/Desktop/Emerging Technologies - COMP 308 - 002/week05/express-react-example/express-react-example/react-client/src/components/CreateCourse.js"],"names":["axios","Spinner","Jumbotron","Form","Button","withRouter","React","useState","CreateCourse","props","studentNumber","screen","console","log","course","setCourse","_id","courseCode","courseName","section","semester","showLoading","setShowLoading","apiUrl","seveCourse","e","preventDefault","data","post","then","result","history","push","catch","error","onChange","persist","target","name","value","saveCourse"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\n//\r\nfunction CreateCourse(props) {\r\n    //\r\n    const studentNumber = props.screen;\r\n    console.log('props.screen',props.screen)\r\n    const [course, setCourse] = useState({ _id: '', courseCode: '', courseName: '', section:'',semester:'', studentNumber: '' });\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    //\r\n    const apiUrl = \"http://localhost:3000/api/courses\"\r\n    //\r\n    const seveCourse = (e) => {\r\n        setShowLoading(true);\r\n        e.preventDefault();\r\n        const data = {courseCode: course.courseCode, courseName: course.courseName,section:course.section,semester:course.semester ,studentNumber: studentNumber };\r\n        //\r\n        axios.post(apiUrl, data)\r\n        .then((result) => {\r\n            setShowLoading(false);\r\n            console.log('results from save course:',result.data)\r\n            props.history.push('/showcourse/' + result.data._id)\r\n\r\n        }).catch((error) => setShowLoading(false));\r\n    };\r\n    //\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setCourse({...course, [e.target.name]: e.target.value});\r\n      }\r\n    \r\n    return (\r\n        <div>\r\n        <h2> Create an course {studentNumber} </h2>\r\n        {showLoading && \r\n            <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </Spinner> \r\n        } \r\n        <Jumbotron>\r\n            <Form onSubmit={saveCourse}>\r\n              <Form.Group>\r\n                <Form.Label> Course Code</Form.Label>\r\n                <Form.Control type=\"text\" name=\"courseCode\" id=\"courseCode\" placeholder=\"Enter courseCode\" value={course.courseCode} onChange={onChange} />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label> Course Name </Form.Label>\r\n                <Form.Control type=\"text\" name=\"courseName\" id=\"courseName\" placeholder=\"Enter courseName\" value={course.courseName} onChange={onChange} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group>\r\n                <Form.Label> Section </Form.Label>\r\n                <Form.Control type=\"text\" name=\"section\" id=\"section\" placeholder=\"Enter section\" value={course.section} onChange={onChange} />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label> semester </Form.Label>\r\n                <Form.Control type=\"text\" name=\"semester\" id=\"semester\" placeholder=\"Enter semester\" value={course.semester} onChange={onChange} />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save Course\r\n              </Button>\r\n            </Form>\r\n          </Jumbotron>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default withRouter(CreateCourse);\r\n"]},"metadata":{},"sourceType":"module"}